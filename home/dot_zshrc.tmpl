# ~/.zshrc
if [[ -n $GHOSTTY_RESOURCES_DIR ]]; then
  source "$GHOSTTY_RESOURCES_DIR"/shell-integration/zsh/ghostty-integration
fi

# Only continue if the shell is interactive
[[ $- != *i* ]] && return

[ -f "$HOME/.config/env.sh" ] && source "$HOME/.config/env.sh"

# âœ¨ Update PATH with common user script/tool locations
for dir in "$HOME/bin" "$HOME/.local/bin" "$HOME/scripts" "/usr/local/bin"; do
  [[ ":$PATH:" != *":$dir:"* ]] && PATH="$dir:$PATH"
done
export PATH
unset dir # Clean up loop var

# ðŸ§© Source aliases
if [[ -f ~/.config/aliases ]]; then
  source ~/.config/aliases
fi

# VIM mode
bindkey -v

# ðŸ›  Homebrew
{{ if eq .chezmoi.os "darwin" }}
if [[ -f /opt/homebrew/bin/brew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi
{{ end }}

{{ if eq .chezmoi.os "linux" }}
if [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi
{{ end }}

# Atuin (Magical Shell History)
if command -v atuin &> /dev/null; then
  eval "$(atuin init zsh)"
fi

# ðŸ§  Mise (tool version manager)
if command -v mise &> /dev/null; then
  eval "$(mise activate zsh)"
fi

# ðŸŒŸ Starship prompt
if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

# ðŸ”„ History control
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=20000
setopt INC_APPEND_HISTORY          # Write to history immediately, not on shell exit
setopt SHARE_HISTORY               # Share command history data
setopt HIST_IGNORE_DUPS            # Ignore duplicate entries
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_REDUCE_BLANKS          # Remove superfluous blanks
setopt HIST_VERIFY                 # Don't execute when recalled from history
setopt EXTENDED_HISTORY            # Record command timestamp

# âœ¨ Completions
autoload -Uz compinit && compinit

# âœ¨ Prompt title in terminals like xterm
precmd() {
  print -Pn "\e]0;%n@%m: %~\a"
}

# ðŸš€ Zoxide (better cd)
if command -v zoxide &> /dev/null; then
  eval "$(zoxide init zsh)"
fi
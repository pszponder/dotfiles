#!/usr/bin/env bash

set -e  # Exit immediately on any error

echo "üîß Running setup..."

# Define the location of the scripts in the repo
SCRIPTS_DIR="$(dirname "$CHEZMOI_SOURCE_DIR")/scripts"

# ======
# Common
# ======

$SCRIPTS_DIR/common/initialize_home.sh
$SCRIPTS_DIR/common/initialize_ssh_config.sh

# ============
# Detect macOS
# ============
if [[ "$(uname)" == "Darwin" ]]; then
  echo "üçé Detected macOS"

  # Install brew if not installed
  if ! command -v brew &>/dev/null; then
    echo "üîß Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  else
    echo "Homebrew is already installed."
  fi

  # # Install Ansible on macOS
  # if ! command -v ansible-playbook &>/dev/null; then
  #   echo "üîß Installing Ansible (Homebrew)..."
  #   brew install ansible
  # fi

  # # Install Ansible galaxy roles
  # ansible-galaxy collection install community.general

  # # Always run Ansible as workstation on macOS
  # if command -v ansible-playbook &>/dev/null; then
  #   echo "üñ•Ô∏è Installing packages with Ansible..."
  #   ansible-playbook "$CHEZMOI_SOURCE_DIR/ansible/setup.yml" -K -e workstation=true
  # else
  #   echo "‚ö†Ô∏è Ansible not found, skipping Ansible setup."
  # fi

  exit 0
fi

# =========================
# Detect Linux distribution
# =========================
echo "üîç Detecting Linux distribution..."
if [[ -f /etc/os-release ]]; then
  . /etc/os-release
  DISTRO_ID="${ID,,}"
else
  echo "‚ùå Could not determine Linux distribution."
  exit 1
fi

echo "üêß Detected Linux distro: $DISTRO_ID"

# =====================
# üì¶ Common Linux steps
# =====================
# $CHEZMOI_SOURCE_DIR/scripts/install_podman_cli.sh

# =====================
# üì¶ Ansible setup
# =====================

# # Check if Ansible is installed
# if ! command -v ansible-playbook &>/dev/null; then
#   echo "üîß Installing Ansible..."
#   if command -v apt-get &>/dev/null; then
#     sudo apt-get update && sudo apt-get install -y ansible
#   elif command -v dnf &>/dev/null; then
#     sudo dnf install -y ansible
#   elif command -v pacman &>/dev/null; then
#     sudo pacman -Syu ansible --noconfirm
#   else
#     echo "‚ùå Could not install Ansible. Please install it manually."
#     exit 1
#   fi
# fi

# # Install Ansible galaxy roles
# ansible-galaxy collection install community.general

# if command -v ansible-playbook &>/dev/null; then
#   echo
#   read -p "Is this a workstation (with GUI apps)? [y/N]: " workstation_answer
#   if [[ "$workstation_answer" =~ ^[Yy] ]]; then
#     workstation=true
#   else
#     workstation=false
#   fi

#   echo "üîß Running Ansible setup (workstation: $workstation)..."
#   ansible-playbook "$CHEZMOI_SOURCE_DIR/ansible/setup.yml" -K -e workstation="$workstation"
# else
#   echo "‚ö†Ô∏è Ansible not found, skipping Ansible setup."
# fi


# =================================
# üì¶ Linux distro-specific sections
# =================================

# Arch
if [[ "$DISTRO_ID" == "arch" ]]; then
  $SCRIPTS_DIR/arch/_install_arch.sh
  exit 0
fi

# Ubuntu or Debian
if [[ "$DISTRO_ID" == "ubuntu" || "$DISTRO_ID" == "debian" ]]; then
  $SCRIPTS_DIR/ubuntu/_install_ubuntu.sh
  exit 0
fi

# Fedora
if [[ "$DISTRO_ID" == "fedora" ]]; then
  $SCRIPTS_DIR/fedora/_install_fedora.sh
  exit 0
fi
